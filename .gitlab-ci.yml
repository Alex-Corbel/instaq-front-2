stages:
  - setup
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  KUBE_CONFIG: $KUBE_CONFIG
  DEPLOYMENT: instaq-front-deployment
  NAMESPACE: instaq-front

setup:
  image: node:12
  stage: setup
  artifacts:
    name: "artifacts-$CI_PIPELINE_ID"
    expire_in: 1 hour
    paths:
      - node_modules/
  script:
    - npm ci
  #tags:
  #  - instaq

linter-test:
  image: node:12
  stage: test
  script:
    - npm run format:check
  #tags:
  #  - instaq

e2e-test:
  image: cypress/browsers:chrome67
  stage: test
  script:
    - npm i @vue/cli-plugin-e2e-cypress@4.0.5 cypress
    - npm run test:e2e -- --headless
  #tags:
  #  - instaq

unit-test:
  image: node:12
  stage: test
  script:
    - npm run test:unit
  #tags:
  #  - instaq

build:
  image: docker:19.03.1
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - DOCKER_BUILDKIT=1 docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  #tags:
  #  - instaq
  except:
    - master

master_tag:
  image: docker:19.03.1
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA > /dev/null && echo "image was pull exist" || DOCKER_BUILDKIT=1 docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
  #tags:
  #  - instaq
  only:
    - master

deploy_staging:
  stage: deploy
  image: registry.gitlab.com/instaq-epsi/docker-kubectl:latest
  script:
    - printf "$KUBE_CONFIG" > $HOME/.kube/config
    - cat $HOME/.kube/config
    - kubectl rollout restart deployment/instaq-front-deployment -n $NAMESPACE
  only:
    - master
  #tags:
  #  - instaq
