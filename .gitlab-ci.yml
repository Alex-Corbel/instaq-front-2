stages:
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  IMAGE: registry.gitlab.com/instaq-epsi/instaq-front
  RELEASE_IMAGE: $IMAGE:latest
  KUBE_CONFIG: $KUBE_CONFIG
  DEPLOYMENT: instaq-front-deployment
  NAMESPACE: instaq-front

e2e-test:
  image: cypress/browsers:chrome67
  stage: test
  script:
    - npm ci --progress=false
    - npm run test:e2e -- --headless
  tags: 
    - instaq

unit-test:
  image: node:12
  stage: test
  script:
    - npm ci --progress=false
    - npm run test:unit
  tags: 
    - instaq

build:
  image: docker:19.03.1
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - DOCKER_BUILDKIT=1 docker build -t $RELEASE_IMAGE .
    - docker push $RELEASE_IMAGE
  tags: 
    - instaq

deploy_staging:
  stage: deploy
  image: registry.gitlab.com/instaq-epsi/docker-kubectl:latest
  script:
    - printf "$KUBE_CONFIG" > $HOME/.kube/config
    - cat $HOME/.kube/config
    - kubectl rollout restart deployment/instaq-front-deployment -n $NAMESPACE
  only:
    - master
  tags: 
    - instaq